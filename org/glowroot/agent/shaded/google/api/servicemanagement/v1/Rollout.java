// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicemanagement/v1/resources.proto

package org.glowroot.agent.shaded.google.api.servicemanagement.v1;

/**
 * <pre>
 * A rollout resource that defines how service configuration versions are pushed
 * to control plane systems. Typically, you create a new version of the
 * service config, and then create a Rollout to push the service config.
 * </pre>
 *
 * Protobuf type {@code google.api.servicemanagement.v1.Rollout}
 */
public  final class Rollout extends
    org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.api.servicemanagement.v1.Rollout)
    RolloutOrBuilder {
  // Use Rollout.newBuilder() to construct.
  private Rollout(org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Rollout() {
    rolloutId_ = "";
    createdBy_ = "";
    status_ = 0;
    serviceName_ = "";
  }

  @java.lang.Override
  public final org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Rollout(
      org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
      org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            rolloutId_ = s;
            break;
          }
          case 18: {
            org.glowroot.agent.shaded.google.protobuf.Timestamp.Builder subBuilder = null;
            if (createTime_ != null) {
              subBuilder = createTime_.toBuilder();
            }
            createTime_ = input.readMessage(org.glowroot.agent.shaded.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(createTime_);
              createTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            createdBy_ = s;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            status_ = rawValue;
            break;
          }
          case 42: {
            org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.Builder subBuilder = null;
            if (strategyCase_ == 5) {
              subBuilder = ((org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_).toBuilder();
            }
            strategy_ =
                input.readMessage(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_);
              strategy_ = subBuilder.buildPartial();
            }
            strategyCase_ = 5;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            serviceName_ = s;
            break;
          }
          case 1602: {
            org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.Builder subBuilder = null;
            if (strategyCase_ == 200) {
              subBuilder = ((org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_).toBuilder();
            }
            strategy_ =
                input.readMessage(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_);
              strategy_ = subBuilder.buildPartial();
            }
            strategyCase_ = 200;
            break;
          }
        }
      }
    } catch (org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final org.glowroot.agent.shaded.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_descriptor;
  }

  protected org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.class, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.Builder.class);
  }

  /**
   * <pre>
   * Status of a Rollout.
   * </pre>
   *
   * Protobuf enum {@code google.api.servicemanagement.v1.Rollout.RolloutStatus}
   */
  public enum RolloutStatus
      implements org.glowroot.agent.shaded.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No status specified.
     * </pre>
     *
     * <code>ROLLOUT_STATUS_UNSPECIFIED = 0;</code>
     */
    ROLLOUT_STATUS_UNSPECIFIED(0),
    /**
     * <pre>
     * The Rollout is in progress.
     * </pre>
     *
     * <code>IN_PROGRESS = 1;</code>
     */
    IN_PROGRESS(1),
    /**
     * <pre>
     * The Rollout has completed successfully.
     * </pre>
     *
     * <code>SUCCESS = 2;</code>
     */
    SUCCESS(2),
    /**
     * <pre>
     * The Rollout has been cancelled. This can happen if you have overlapping
     * Rollout pushes, and the previous ones will be cancelled.
     * </pre>
     *
     * <code>CANCELLED = 3;</code>
     */
    CANCELLED(3),
    /**
     * <pre>
     * The Rollout has failed. It is typically caused by configuration errors.
     * </pre>
     *
     * <code>FAILED = 4;</code>
     */
    FAILED(4),
    /**
     * <pre>
     * The Rollout has not started yet and is pending for execution.
     * </pre>
     *
     * <code>PENDING = 5;</code>
     */
    PENDING(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No status specified.
     * </pre>
     *
     * <code>ROLLOUT_STATUS_UNSPECIFIED = 0;</code>
     */
    public static final int ROLLOUT_STATUS_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The Rollout is in progress.
     * </pre>
     *
     * <code>IN_PROGRESS = 1;</code>
     */
    public static final int IN_PROGRESS_VALUE = 1;
    /**
     * <pre>
     * The Rollout has completed successfully.
     * </pre>
     *
     * <code>SUCCESS = 2;</code>
     */
    public static final int SUCCESS_VALUE = 2;
    /**
     * <pre>
     * The Rollout has been cancelled. This can happen if you have overlapping
     * Rollout pushes, and the previous ones will be cancelled.
     * </pre>
     *
     * <code>CANCELLED = 3;</code>
     */
    public static final int CANCELLED_VALUE = 3;
    /**
     * <pre>
     * The Rollout has failed. It is typically caused by configuration errors.
     * </pre>
     *
     * <code>FAILED = 4;</code>
     */
    public static final int FAILED_VALUE = 4;
    /**
     * <pre>
     * The Rollout has not started yet and is pending for execution.
     * </pre>
     *
     * <code>PENDING = 5;</code>
     */
    public static final int PENDING_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RolloutStatus valueOf(int value) {
      return forNumber(value);
    }

    public static RolloutStatus forNumber(int value) {
      switch (value) {
        case 0: return ROLLOUT_STATUS_UNSPECIFIED;
        case 1: return IN_PROGRESS;
        case 2: return SUCCESS;
        case 3: return CANCELLED;
        case 4: return FAILED;
        case 5: return PENDING;
        default: return null;
      }
    }

    public static org.glowroot.agent.shaded.google.protobuf.Internal.EnumLiteMap<RolloutStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final org.glowroot.agent.shaded.google.protobuf.Internal.EnumLiteMap<
        RolloutStatus> internalValueMap =
          new org.glowroot.agent.shaded.google.protobuf.Internal.EnumLiteMap<RolloutStatus>() {
            public RolloutStatus findValueByNumber(int number) {
              return RolloutStatus.forNumber(number);
            }
          };

    public final org.glowroot.agent.shaded.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final org.glowroot.agent.shaded.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final org.glowroot.agent.shaded.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.getDescriptor().getEnumTypes().get(0);
    }

    private static final RolloutStatus[] VALUES = values();

    public static RolloutStatus valueOf(
        org.glowroot.agent.shaded.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RolloutStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.api.servicemanagement.v1.Rollout.RolloutStatus)
  }

  public interface TrafficPercentStrategyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
      org.glowroot.agent.shaded.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */
    int getPercentagesCount();
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */
    boolean containsPercentages(
        java.lang.String key);
    /**
     * Use {@link #getPercentagesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Double>
    getPercentages();
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */
    java.util.Map<java.lang.String, java.lang.Double>
    getPercentagesMap();
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    double getPercentagesOrDefault(
        java.lang.String key,
        double defaultValue);
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    double getPercentagesOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Strategy that specifies how Google Service Control should select
   * different
   * versions of service configurations based on traffic percentage.
   * One example of how to gradually rollout a new service configuration using
   * this
   * strategy:
   * Day 1
   *     Rollout {
   *       id: "example.googleapis.com/rollout_20160206"
   *       traffic_percent_strategy {
   *         percentages: {
   *           "example.googleapis.com/20160201": 70.00
   *           "example.googleapis.com/20160206": 30.00
   *         }
   *       }
   *     }
   * Day 2
   *     Rollout {
   *       id: "example.googleapis.com/rollout_20160207"
   *       traffic_percent_strategy: {
   *         percentages: {
   *           "example.googleapis.com/20160206": 100.00
   *         }
   *       }
   *     }
   * </pre>
   *
   * Protobuf type {@code google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy}
   */
  public  static final class TrafficPercentStrategy extends
      org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
      TrafficPercentStrategyOrBuilder {
    // Use TrafficPercentStrategy.newBuilder() to construct.
    private TrafficPercentStrategy(org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrafficPercentStrategy() {
    }

    @java.lang.Override
    public final org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TrafficPercentStrategy(
        org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                percentages_ = org.glowroot.agent.shaded.google.protobuf.MapField.newMapField(
                    PercentagesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              org.glowroot.agent.shaded.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
              percentages__ = input.readMessage(
                  PercentagesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              percentages_.getMutableMap().put(
                  percentages__.getKey(), percentages__.getValue());
              break;
            }
          }
        }
      } catch (org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final org.glowroot.agent.shaded.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_TrafficPercentStrategy_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected org.glowroot.agent.shaded.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetPercentages();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_TrafficPercentStrategy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.class, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.Builder.class);
    }

    public static final int PERCENTAGES_FIELD_NUMBER = 1;
    private static final class PercentagesDefaultEntryHolder {
      static final org.glowroot.agent.shaded.google.protobuf.MapEntry<
          java.lang.String, java.lang.Double> defaultEntry =
              org.glowroot.agent.shaded.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Double>newDefaultInstance(
                  org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_TrafficPercentStrategy_PercentagesEntry_descriptor, 
                  org.glowroot.agent.shaded.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  org.glowroot.agent.shaded.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private org.glowroot.agent.shaded.google.protobuf.MapField<
        java.lang.String, java.lang.Double> percentages_;
    private org.glowroot.agent.shaded.google.protobuf.MapField<java.lang.String, java.lang.Double>
    internalGetPercentages() {
      if (percentages_ == null) {
        return org.glowroot.agent.shaded.google.protobuf.MapField.emptyMapField(
            PercentagesDefaultEntryHolder.defaultEntry);
      }
      return percentages_;
    }

    public int getPercentagesCount() {
      return internalGetPercentages().getMap().size();
    }
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    public boolean containsPercentages(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetPercentages().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPercentagesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getPercentages() {
      return getPercentagesMap();
    }
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Double> getPercentagesMap() {
      return internalGetPercentages().getMap();
    }
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    public double getPercentagesOrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetPercentages().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Maps service configuration IDs to their corresponding traffic percentage.
     * Key is the service configuration ID, Value is the traffic percentage
     * which must be greater than 0.0 and the sum must equal to 100.0.
     * </pre>
     *
     * <code>map&lt;string, double&gt; percentages = 1;</code>
     */

    public double getPercentagesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetPercentages().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.glowroot.agent.shaded.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetPercentages(),
          PercentagesDefaultEntryHolder.defaultEntry,
          1);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
           : internalGetPercentages().getMap().entrySet()) {
        org.glowroot.agent.shaded.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
        percentages__ = PercentagesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += org.glowroot.agent.shaded.google.protobuf.CodedOutputStream
            .computeMessageSize(1, percentages__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)) {
        return super.equals(obj);
      }
      org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy other = (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) obj;

      boolean result = true;
      result = result && internalGetPercentages().equals(
          other.internalGetPercentages());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetPercentages().getMap().isEmpty()) {
        hash = (37 * hash) + PERCENTAGES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPercentages().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        org.glowroot.agent.shaded.google.protobuf.ByteString data)
        throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        org.glowroot.agent.shaded.google.protobuf.ByteString data,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(byte[] data)
        throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        byte[] data,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        java.io.InputStream input,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseDelimitedFrom(
        java.io.InputStream input,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        org.glowroot.agent.shaded.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parseFrom(
        org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Strategy that specifies how Google Service Control should select
     * different
     * versions of service configurations based on traffic percentage.
     * One example of how to gradually rollout a new service configuration using
     * this
     * strategy:
     * Day 1
     *     Rollout {
     *       id: "example.googleapis.com/rollout_20160206"
     *       traffic_percent_strategy {
     *         percentages: {
     *           "example.googleapis.com/20160201": 70.00
     *           "example.googleapis.com/20160206": 30.00
     *         }
     *       }
     *     }
     * Day 2
     *     Rollout {
     *       id: "example.googleapis.com/rollout_20160207"
     *       traffic_percent_strategy: {
     *         percentages: {
     *           "example.googleapis.com/20160206": 100.00
     *         }
     *       }
     *     }
     * </pre>
     *
     * Protobuf type {@code google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy}
     */
    public static final class Builder extends
        org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategyOrBuilder {
      public static final org.glowroot.agent.shaded.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_TrafficPercentStrategy_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected org.glowroot.agent.shaded.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetPercentages();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected org.glowroot.agent.shaded.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutablePercentages();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_TrafficPercentStrategy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.class, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.Builder.class);
      }

      // Construct using org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutablePercentages().clear();
        return this;
      }

      public org.glowroot.agent.shaded.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_TrafficPercentStrategy_descriptor;
      }

      public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy getDefaultInstanceForType() {
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.getDefaultInstance();
      }

      public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy build() {
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy buildPartial() {
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy result = new org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy(this);
        int from_bitField0_ = bitField0_;
        result.percentages_ = internalGetPercentages();
        result.percentages_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          org.glowroot.agent.shaded.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(org.glowroot.agent.shaded.google.protobuf.Message other) {
        if (other instanceof org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) {
          return mergeFrom((org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy other) {
        if (other == org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.getDefaultInstance()) return this;
        internalGetMutablePercentages().mergeFrom(
            other.internalGetPercentages());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
          org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.glowroot.agent.shaded.google.protobuf.MapField<
          java.lang.String, java.lang.Double> percentages_;
      private org.glowroot.agent.shaded.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetPercentages() {
        if (percentages_ == null) {
          return org.glowroot.agent.shaded.google.protobuf.MapField.emptyMapField(
              PercentagesDefaultEntryHolder.defaultEntry);
        }
        return percentages_;
      }
      private org.glowroot.agent.shaded.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetMutablePercentages() {
        onChanged();;
        if (percentages_ == null) {
          percentages_ = org.glowroot.agent.shaded.google.protobuf.MapField.newMapField(
              PercentagesDefaultEntryHolder.defaultEntry);
        }
        if (!percentages_.isMutable()) {
          percentages_ = percentages_.copy();
        }
        return percentages_;
      }

      public int getPercentagesCount() {
        return internalGetPercentages().getMap().size();
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */

      public boolean containsPercentages(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetPercentages().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPercentagesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getPercentages() {
        return getPercentagesMap();
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Double> getPercentagesMap() {
        return internalGetPercentages().getMap();
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */

      public double getPercentagesOrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetPercentages().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */

      public double getPercentagesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetPercentages().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPercentages() {
        internalGetMutablePercentages().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */

      public Builder removePercentages(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePercentages().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double>
      getMutablePercentages() {
        return internalGetMutablePercentages().getMutableMap();
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */
      public Builder putPercentages(
          java.lang.String key,
          double value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutablePercentages().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Maps service configuration IDs to their corresponding traffic percentage.
       * Key is the service configuration ID, Value is the traffic percentage
       * which must be greater than 0.0 and the sum must equal to 100.0.
       * </pre>
       *
       * <code>map&lt;string, double&gt; percentages = 1;</code>
       */

      public Builder putAllPercentages(
          java.util.Map<java.lang.String, java.lang.Double> values) {
        internalGetMutablePercentages().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
    }

    // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
    private static final org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy();
    }

    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final org.glowroot.agent.shaded.google.protobuf.Parser<TrafficPercentStrategy>
        PARSER = new org.glowroot.agent.shaded.google.protobuf.AbstractParser<TrafficPercentStrategy>() {
      public TrafficPercentStrategy parsePartialFrom(
          org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
          org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
          return new TrafficPercentStrategy(input, extensionRegistry);
      }
    };

    public static org.glowroot.agent.shaded.google.protobuf.Parser<TrafficPercentStrategy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public org.glowroot.agent.shaded.google.protobuf.Parser<TrafficPercentStrategy> getParserForType() {
      return PARSER;
    }

    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeleteServiceStrategyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
      org.glowroot.agent.shaded.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Strategy used to delete a service. This strategy is a placeholder only
   * used by the system generated rollout to delete a service.
   * </pre>
   *
   * Protobuf type {@code google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy}
   */
  public  static final class DeleteServiceStrategy extends
      org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
      DeleteServiceStrategyOrBuilder {
    // Use DeleteServiceStrategy.newBuilder() to construct.
    private DeleteServiceStrategy(org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeleteServiceStrategy() {
    }

    @java.lang.Override
    public final org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DeleteServiceStrategy(
        org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final org.glowroot.agent.shaded.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_DeleteServiceStrategy_descriptor;
    }

    protected org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_DeleteServiceStrategy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.class, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.glowroot.agent.shaded.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)) {
        return super.equals(obj);
      }
      org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy other = (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        org.glowroot.agent.shaded.google.protobuf.ByteString data)
        throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        org.glowroot.agent.shaded.google.protobuf.ByteString data,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(byte[] data)
        throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        byte[] data,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        java.io.InputStream input,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseDelimitedFrom(
        java.io.InputStream input,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        org.glowroot.agent.shaded.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parseFrom(
        org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Strategy used to delete a service. This strategy is a placeholder only
     * used by the system generated rollout to delete a service.
     * </pre>
     *
     * Protobuf type {@code google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy}
     */
    public static final class Builder extends
        org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategyOrBuilder {
      public static final org.glowroot.agent.shaded.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_DeleteServiceStrategy_descriptor;
      }

      protected org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_DeleteServiceStrategy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.class, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.Builder.class);
      }

      // Construct using org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public org.glowroot.agent.shaded.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_DeleteServiceStrategy_descriptor;
      }

      public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy getDefaultInstanceForType() {
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.getDefaultInstance();
      }

      public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy build() {
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy buildPartial() {
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy result = new org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          org.glowroot.agent.shaded.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(org.glowroot.agent.shaded.google.protobuf.Message other) {
        if (other instanceof org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) {
          return mergeFrom((org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy other) {
        if (other == org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
          org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
    }

    // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
    private static final org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy();
    }

    public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final org.glowroot.agent.shaded.google.protobuf.Parser<DeleteServiceStrategy>
        PARSER = new org.glowroot.agent.shaded.google.protobuf.AbstractParser<DeleteServiceStrategy>() {
      public DeleteServiceStrategy parsePartialFrom(
          org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
          org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
          return new DeleteServiceStrategy(input, extensionRegistry);
      }
    };

    public static org.glowroot.agent.shaded.google.protobuf.Parser<DeleteServiceStrategy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public org.glowroot.agent.shaded.google.protobuf.Parser<DeleteServiceStrategy> getParserForType() {
      return PARSER;
    }

    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int strategyCase_ = 0;
  private java.lang.Object strategy_;
  public enum StrategyCase
      implements org.glowroot.agent.shaded.google.protobuf.Internal.EnumLite {
    TRAFFIC_PERCENT_STRATEGY(5),
    DELETE_SERVICE_STRATEGY(200),
    STRATEGY_NOT_SET(0);
    private final int value;
    private StrategyCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StrategyCase valueOf(int value) {
      return forNumber(value);
    }

    public static StrategyCase forNumber(int value) {
      switch (value) {
        case 5: return TRAFFIC_PERCENT_STRATEGY;
        case 200: return DELETE_SERVICE_STRATEGY;
        case 0: return STRATEGY_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public StrategyCase
  getStrategyCase() {
    return StrategyCase.forNumber(
        strategyCase_);
  }

  public static final int ROLLOUT_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object rolloutId_;
  /**
   * <pre>
   * Optional unique identifier of this Rollout. Only lower case letters, digits
   *  and '-' are allowed.
   * If not specified by client, the server will generate one. The generated id
   * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
   * date in ISO 8601 format.  "revision number" is a monotonically increasing
   * positive number that is reset every day for each service.
   * An example of the generated rollout_id is '2016-02-16r1'
   * </pre>
   *
   * <code>string rollout_id = 1;</code>
   */
  public java.lang.String getRolloutId() {
    java.lang.Object ref = rolloutId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      org.glowroot.agent.shaded.google.protobuf.ByteString bs = 
          (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      rolloutId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional unique identifier of this Rollout. Only lower case letters, digits
   *  and '-' are allowed.
   * If not specified by client, the server will generate one. The generated id
   * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
   * date in ISO 8601 format.  "revision number" is a monotonically increasing
   * positive number that is reset every day for each service.
   * An example of the generated rollout_id is '2016-02-16r1'
   * </pre>
   *
   * <code>string rollout_id = 1;</code>
   */
  public org.glowroot.agent.shaded.google.protobuf.ByteString
      getRolloutIdBytes() {
    java.lang.Object ref = rolloutId_;
    if (ref instanceof java.lang.String) {
      org.glowroot.agent.shaded.google.protobuf.ByteString b = 
          org.glowroot.agent.shaded.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      rolloutId_ = b;
      return b;
    } else {
      return (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
    }
  }

  public static final int CREATE_TIME_FIELD_NUMBER = 2;
  private org.glowroot.agent.shaded.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * Creation time of the rollout. Readonly.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2;</code>
   */
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <pre>
   * Creation time of the rollout. Readonly.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2;</code>
   */
  public org.glowroot.agent.shaded.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? org.glowroot.agent.shaded.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * Creation time of the rollout. Readonly.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2;</code>
   */
  public org.glowroot.agent.shaded.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
    return getCreateTime();
  }

  public static final int CREATED_BY_FIELD_NUMBER = 3;
  private volatile java.lang.Object createdBy_;
  /**
   * <pre>
   * The user who created the Rollout. Readonly.
   * </pre>
   *
   * <code>string created_by = 3;</code>
   */
  public java.lang.String getCreatedBy() {
    java.lang.Object ref = createdBy_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      org.glowroot.agent.shaded.google.protobuf.ByteString bs = 
          (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      createdBy_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The user who created the Rollout. Readonly.
   * </pre>
   *
   * <code>string created_by = 3;</code>
   */
  public org.glowroot.agent.shaded.google.protobuf.ByteString
      getCreatedByBytes() {
    java.lang.Object ref = createdBy_;
    if (ref instanceof java.lang.String) {
      org.glowroot.agent.shaded.google.protobuf.ByteString b = 
          org.glowroot.agent.shaded.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      createdBy_ = b;
      return b;
    } else {
      return (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
    }
  }

  public static final int STATUS_FIELD_NUMBER = 4;
  private int status_;
  /**
   * <pre>
   * The status of this rollout. Readonly. In case of a failed rollout,
   * the system will automatically rollback to the current Rollout
   * version. Readonly.
   * </pre>
   *
   * <code>.google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
   */
  public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * The status of this rollout. Readonly. In case of a failed rollout,
   * the system will automatically rollback to the current Rollout
   * version. Readonly.
   * </pre>
   *
   * <code>.google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
   */
  public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.RolloutStatus getStatus() {
    org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.RolloutStatus result = org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.RolloutStatus.valueOf(status_);
    return result == null ? org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.RolloutStatus.UNRECOGNIZED : result;
  }

  public static final int TRAFFIC_PERCENT_STRATEGY_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Google Service Control selects service configurations based on
   * traffic percentage.
   * </pre>
   *
   * <code>.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
   */
  public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy getTrafficPercentStrategy() {
    if (strategyCase_ == 5) {
       return (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_;
    }
    return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.getDefaultInstance();
  }
  /**
   * <pre>
   * Google Service Control selects service configurations based on
   * traffic percentage.
   * </pre>
   *
   * <code>.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
   */
  public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategyOrBuilder getTrafficPercentStrategyOrBuilder() {
    if (strategyCase_ == 5) {
       return (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_;
    }
    return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.getDefaultInstance();
  }

  public static final int DELETE_SERVICE_STRATEGY_FIELD_NUMBER = 200;
  /**
   * <pre>
   * The strategy associated with a rollout to delete a `ManagedService`.
   * Readonly.
   * </pre>
   *
   * <code>.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
   */
  public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy getDeleteServiceStrategy() {
    if (strategyCase_ == 200) {
       return (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_;
    }
    return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.getDefaultInstance();
  }
  /**
   * <pre>
   * The strategy associated with a rollout to delete a `ManagedService`.
   * Readonly.
   * </pre>
   *
   * <code>.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
   */
  public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategyOrBuilder getDeleteServiceStrategyOrBuilder() {
    if (strategyCase_ == 200) {
       return (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_;
    }
    return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.getDefaultInstance();
  }

  public static final int SERVICE_NAME_FIELD_NUMBER = 8;
  private volatile java.lang.Object serviceName_;
  /**
   * <pre>
   * The name of the service associated with this Rollout.
   * </pre>
   *
   * <code>string service_name = 8;</code>
   */
  public java.lang.String getServiceName() {
    java.lang.Object ref = serviceName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      org.glowroot.agent.shaded.google.protobuf.ByteString bs = 
          (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serviceName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the service associated with this Rollout.
   * </pre>
   *
   * <code>string service_name = 8;</code>
   */
  public org.glowroot.agent.shaded.google.protobuf.ByteString
      getServiceNameBytes() {
    java.lang.Object ref = serviceName_;
    if (ref instanceof java.lang.String) {
      org.glowroot.agent.shaded.google.protobuf.ByteString b = 
          org.glowroot.agent.shaded.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      serviceName_ = b;
      return b;
    } else {
      return (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(org.glowroot.agent.shaded.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getRolloutIdBytes().isEmpty()) {
      org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.writeString(output, 1, rolloutId_);
    }
    if (createTime_ != null) {
      output.writeMessage(2, getCreateTime());
    }
    if (!getCreatedByBytes().isEmpty()) {
      org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.writeString(output, 3, createdBy_);
    }
    if (status_ != org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.RolloutStatus.ROLLOUT_STATUS_UNSPECIFIED.getNumber()) {
      output.writeEnum(4, status_);
    }
    if (strategyCase_ == 5) {
      output.writeMessage(5, (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_);
    }
    if (!getServiceNameBytes().isEmpty()) {
      org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.writeString(output, 8, serviceName_);
    }
    if (strategyCase_ == 200) {
      output.writeMessage(200, (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getRolloutIdBytes().isEmpty()) {
      size += org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.computeStringSize(1, rolloutId_);
    }
    if (createTime_ != null) {
      size += org.glowroot.agent.shaded.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getCreateTime());
    }
    if (!getCreatedByBytes().isEmpty()) {
      size += org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.computeStringSize(3, createdBy_);
    }
    if (status_ != org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.RolloutStatus.ROLLOUT_STATUS_UNSPECIFIED.getNumber()) {
      size += org.glowroot.agent.shaded.google.protobuf.CodedOutputStream
        .computeEnumSize(4, status_);
    }
    if (strategyCase_ == 5) {
      size += org.glowroot.agent.shaded.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_);
    }
    if (!getServiceNameBytes().isEmpty()) {
      size += org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.computeStringSize(8, serviceName_);
    }
    if (strategyCase_ == 200) {
      size += org.glowroot.agent.shaded.google.protobuf.CodedOutputStream
        .computeMessageSize(200, (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout)) {
      return super.equals(obj);
    }
    org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout other = (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout) obj;

    boolean result = true;
    result = result && getRolloutId()
        .equals(other.getRolloutId());
    result = result && (hasCreateTime() == other.hasCreateTime());
    if (hasCreateTime()) {
      result = result && getCreateTime()
          .equals(other.getCreateTime());
    }
    result = result && getCreatedBy()
        .equals(other.getCreatedBy());
    result = result && status_ == other.status_;
    result = result && getServiceName()
        .equals(other.getServiceName());
    result = result && getStrategyCase().equals(
        other.getStrategyCase());
    if (!result) return false;
    switch (strategyCase_) {
      case 5:
        result = result && getTrafficPercentStrategy()
            .equals(other.getTrafficPercentStrategy());
        break;
      case 200:
        result = result && getDeleteServiceStrategy()
            .equals(other.getDeleteServiceStrategy());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ROLLOUT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getRolloutId().hashCode();
    if (hasCreateTime()) {
      hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCreateTime().hashCode();
    }
    hash = (37 * hash) + CREATED_BY_FIELD_NUMBER;
    hash = (53 * hash) + getCreatedBy().hashCode();
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    hash = (37 * hash) + SERVICE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getServiceName().hashCode();
    switch (strategyCase_) {
      case 5:
        hash = (37 * hash) + TRAFFIC_PERCENT_STRATEGY_FIELD_NUMBER;
        hash = (53 * hash) + getTrafficPercentStrategy().hashCode();
        break;
      case 200:
        hash = (37 * hash) + DELETE_SERVICE_STRATEGY_FIELD_NUMBER;
        hash = (53 * hash) + getDeleteServiceStrategy().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout parseFrom(
      org.glowroot.agent.shaded.google.protobuf.ByteString data)
      throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout parseFrom(
      org.glowroot.agent.shaded.google.protobuf.ByteString data,
      org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout parseFrom(byte[] data)
      throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout parseFrom(
      byte[] data,
      org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout parseFrom(
      java.io.InputStream input,
      org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout parseDelimitedFrom(
      java.io.InputStream input,
      org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout parseFrom(
      org.glowroot.agent.shaded.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout parseFrom(
      org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
      org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A rollout resource that defines how service configuration versions are pushed
   * to control plane systems. Typically, you create a new version of the
   * service config, and then create a Rollout to push the service config.
   * </pre>
   *
   * Protobuf type {@code google.api.servicemanagement.v1.Rollout}
   */
  public static final class Builder extends
      org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.servicemanagement.v1.Rollout)
      org.glowroot.agent.shaded.google.api.servicemanagement.v1.RolloutOrBuilder {
    public static final org.glowroot.agent.shaded.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_descriptor;
    }

    protected org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.class, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.Builder.class);
    }

    // Construct using org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (org.glowroot.agent.shaded.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      rolloutId_ = "";

      if (createTimeBuilder_ == null) {
        createTime_ = null;
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }
      createdBy_ = "";

      status_ = 0;

      serviceName_ = "";

      strategyCase_ = 0;
      strategy_ = null;
      return this;
    }

    public org.glowroot.agent.shaded.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.glowroot.agent.shaded.google.api.servicemanagement.v1.ResourcesProto.internal_static_google_api_servicemanagement_v1_Rollout_descriptor;
    }

    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout getDefaultInstanceForType() {
      return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.getDefaultInstance();
    }

    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout build() {
      org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout buildPartial() {
      org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout result = new org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout(this);
      result.rolloutId_ = rolloutId_;
      if (createTimeBuilder_ == null) {
        result.createTime_ = createTime_;
      } else {
        result.createTime_ = createTimeBuilder_.build();
      }
      result.createdBy_ = createdBy_;
      result.status_ = status_;
      if (strategyCase_ == 5) {
        if (trafficPercentStrategyBuilder_ == null) {
          result.strategy_ = strategy_;
        } else {
          result.strategy_ = trafficPercentStrategyBuilder_.build();
        }
      }
      if (strategyCase_ == 200) {
        if (deleteServiceStrategyBuilder_ == null) {
          result.strategy_ = strategy_;
        } else {
          result.strategy_ = deleteServiceStrategyBuilder_.build();
        }
      }
      result.serviceName_ = serviceName_;
      result.strategyCase_ = strategyCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        org.glowroot.agent.shaded.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        org.glowroot.agent.shaded.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(org.glowroot.agent.shaded.google.protobuf.Message other) {
      if (other instanceof org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout) {
        return mergeFrom((org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout other) {
      if (other == org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.getDefaultInstance()) return this;
      if (!other.getRolloutId().isEmpty()) {
        rolloutId_ = other.rolloutId_;
        onChanged();
      }
      if (other.hasCreateTime()) {
        mergeCreateTime(other.getCreateTime());
      }
      if (!other.getCreatedBy().isEmpty()) {
        createdBy_ = other.createdBy_;
        onChanged();
      }
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      if (!other.getServiceName().isEmpty()) {
        serviceName_ = other.serviceName_;
        onChanged();
      }
      switch (other.getStrategyCase()) {
        case TRAFFIC_PERCENT_STRATEGY: {
          mergeTrafficPercentStrategy(other.getTrafficPercentStrategy());
          break;
        }
        case DELETE_SERVICE_STRATEGY: {
          mergeDeleteServiceStrategy(other.getDeleteServiceStrategy());
          break;
        }
        case STRATEGY_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int strategyCase_ = 0;
    private java.lang.Object strategy_;
    public StrategyCase
        getStrategyCase() {
      return StrategyCase.forNumber(
          strategyCase_);
    }

    public Builder clearStrategy() {
      strategyCase_ = 0;
      strategy_ = null;
      onChanged();
      return this;
    }


    private java.lang.Object rolloutId_ = "";
    /**
     * <pre>
     * Optional unique identifier of this Rollout. Only lower case letters, digits
     *  and '-' are allowed.
     * If not specified by client, the server will generate one. The generated id
     * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
     * date in ISO 8601 format.  "revision number" is a monotonically increasing
     * positive number that is reset every day for each service.
     * An example of the generated rollout_id is '2016-02-16r1'
     * </pre>
     *
     * <code>string rollout_id = 1;</code>
     */
    public java.lang.String getRolloutId() {
      java.lang.Object ref = rolloutId_;
      if (!(ref instanceof java.lang.String)) {
        org.glowroot.agent.shaded.google.protobuf.ByteString bs =
            (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rolloutId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional unique identifier of this Rollout. Only lower case letters, digits
     *  and '-' are allowed.
     * If not specified by client, the server will generate one. The generated id
     * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
     * date in ISO 8601 format.  "revision number" is a monotonically increasing
     * positive number that is reset every day for each service.
     * An example of the generated rollout_id is '2016-02-16r1'
     * </pre>
     *
     * <code>string rollout_id = 1;</code>
     */
    public org.glowroot.agent.shaded.google.protobuf.ByteString
        getRolloutIdBytes() {
      java.lang.Object ref = rolloutId_;
      if (ref instanceof String) {
        org.glowroot.agent.shaded.google.protobuf.ByteString b = 
            org.glowroot.agent.shaded.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rolloutId_ = b;
        return b;
      } else {
        return (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional unique identifier of this Rollout. Only lower case letters, digits
     *  and '-' are allowed.
     * If not specified by client, the server will generate one. The generated id
     * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
     * date in ISO 8601 format.  "revision number" is a monotonically increasing
     * positive number that is reset every day for each service.
     * An example of the generated rollout_id is '2016-02-16r1'
     * </pre>
     *
     * <code>string rollout_id = 1;</code>
     */
    public Builder setRolloutId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      rolloutId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional unique identifier of this Rollout. Only lower case letters, digits
     *  and '-' are allowed.
     * If not specified by client, the server will generate one. The generated id
     * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
     * date in ISO 8601 format.  "revision number" is a monotonically increasing
     * positive number that is reset every day for each service.
     * An example of the generated rollout_id is '2016-02-16r1'
     * </pre>
     *
     * <code>string rollout_id = 1;</code>
     */
    public Builder clearRolloutId() {
      
      rolloutId_ = getDefaultInstance().getRolloutId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional unique identifier of this Rollout. Only lower case letters, digits
     *  and '-' are allowed.
     * If not specified by client, the server will generate one. The generated id
     * will have the form of &lt;date&gt;&lt;revision number&gt;, where "date" is the create
     * date in ISO 8601 format.  "revision number" is a monotonically increasing
     * positive number that is reset every day for each service.
     * An example of the generated rollout_id is '2016-02-16r1'
     * </pre>
     *
     * <code>string rollout_id = 1;</code>
     */
    public Builder setRolloutIdBytes(
        org.glowroot.agent.shaded.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      rolloutId_ = value;
      onChanged();
      return this;
    }

    private org.glowroot.agent.shaded.google.protobuf.Timestamp createTime_ = null;
    private org.glowroot.agent.shaded.google.protobuf.SingleFieldBuilderV3<
        org.glowroot.agent.shaded.google.protobuf.Timestamp, org.glowroot.agent.shaded.google.protobuf.Timestamp.Builder, org.glowroot.agent.shaded.google.protobuf.TimestampOrBuilder> createTimeBuilder_;
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public boolean hasCreateTime() {
      return createTimeBuilder_ != null || createTime_ != null;
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public org.glowroot.agent.shaded.google.protobuf.Timestamp getCreateTime() {
      if (createTimeBuilder_ == null) {
        return createTime_ == null ? org.glowroot.agent.shaded.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      } else {
        return createTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder setCreateTime(org.glowroot.agent.shaded.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createTime_ = value;
        onChanged();
      } else {
        createTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder setCreateTime(
        org.glowroot.agent.shaded.google.protobuf.Timestamp.Builder builderForValue) {
      if (createTimeBuilder_ == null) {
        createTime_ = builderForValue.build();
        onChanged();
      } else {
        createTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder mergeCreateTime(org.glowroot.agent.shaded.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (createTime_ != null) {
          createTime_ =
            org.glowroot.agent.shaded.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
        } else {
          createTime_ = value;
        }
        onChanged();
      } else {
        createTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public Builder clearCreateTime() {
      if (createTimeBuilder_ == null) {
        createTime_ = null;
        onChanged();
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public org.glowroot.agent.shaded.google.protobuf.Timestamp.Builder getCreateTimeBuilder() {
      
      onChanged();
      return getCreateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    public org.glowroot.agent.shaded.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
      if (createTimeBuilder_ != null) {
        return createTimeBuilder_.getMessageOrBuilder();
      } else {
        return createTime_ == null ?
            org.glowroot.agent.shaded.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      }
    }
    /**
     * <pre>
     * Creation time of the rollout. Readonly.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 2;</code>
     */
    private org.glowroot.agent.shaded.google.protobuf.SingleFieldBuilderV3<
        org.glowroot.agent.shaded.google.protobuf.Timestamp, org.glowroot.agent.shaded.google.protobuf.Timestamp.Builder, org.glowroot.agent.shaded.google.protobuf.TimestampOrBuilder> 
        getCreateTimeFieldBuilder() {
      if (createTimeBuilder_ == null) {
        createTimeBuilder_ = new org.glowroot.agent.shaded.google.protobuf.SingleFieldBuilderV3<
            org.glowroot.agent.shaded.google.protobuf.Timestamp, org.glowroot.agent.shaded.google.protobuf.Timestamp.Builder, org.glowroot.agent.shaded.google.protobuf.TimestampOrBuilder>(
                getCreateTime(),
                getParentForChildren(),
                isClean());
        createTime_ = null;
      }
      return createTimeBuilder_;
    }

    private java.lang.Object createdBy_ = "";
    /**
     * <pre>
     * The user who created the Rollout. Readonly.
     * </pre>
     *
     * <code>string created_by = 3;</code>
     */
    public java.lang.String getCreatedBy() {
      java.lang.Object ref = createdBy_;
      if (!(ref instanceof java.lang.String)) {
        org.glowroot.agent.shaded.google.protobuf.ByteString bs =
            (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        createdBy_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The user who created the Rollout. Readonly.
     * </pre>
     *
     * <code>string created_by = 3;</code>
     */
    public org.glowroot.agent.shaded.google.protobuf.ByteString
        getCreatedByBytes() {
      java.lang.Object ref = createdBy_;
      if (ref instanceof String) {
        org.glowroot.agent.shaded.google.protobuf.ByteString b = 
            org.glowroot.agent.shaded.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createdBy_ = b;
        return b;
      } else {
        return (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The user who created the Rollout. Readonly.
     * </pre>
     *
     * <code>string created_by = 3;</code>
     */
    public Builder setCreatedBy(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      createdBy_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user who created the Rollout. Readonly.
     * </pre>
     *
     * <code>string created_by = 3;</code>
     */
    public Builder clearCreatedBy() {
      
      createdBy_ = getDefaultInstance().getCreatedBy();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user who created the Rollout. Readonly.
     * </pre>
     *
     * <code>string created_by = 3;</code>
     */
    public Builder setCreatedByBytes(
        org.glowroot.agent.shaded.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      createdBy_ = value;
      onChanged();
      return this;
    }

    private int status_ = 0;
    /**
     * <pre>
     * The status of this rollout. Readonly. In case of a failed rollout,
     * the system will automatically rollback to the current Rollout
     * version. Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * The status of this rollout. Readonly. In case of a failed rollout,
     * the system will automatically rollback to the current Rollout
     * version. Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
     */
    public Builder setStatusValue(int value) {
      status_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The status of this rollout. Readonly. In case of a failed rollout,
     * the system will automatically rollback to the current Rollout
     * version. Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
     */
    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.RolloutStatus getStatus() {
      org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.RolloutStatus result = org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.RolloutStatus.valueOf(status_);
      return result == null ? org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.RolloutStatus.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The status of this rollout. Readonly. In case of a failed rollout,
     * the system will automatically rollback to the current Rollout
     * version. Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
     */
    public Builder setStatus(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.RolloutStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The status of this rollout. Readonly. In case of a failed rollout,
     * the system will automatically rollback to the current Rollout
     * version. Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;</code>
     */
    public Builder clearStatus() {
      
      status_ = 0;
      onChanged();
      return this;
    }

    private org.glowroot.agent.shaded.google.protobuf.SingleFieldBuilderV3<
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.Builder, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategyOrBuilder> trafficPercentStrategyBuilder_;
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy getTrafficPercentStrategy() {
      if (trafficPercentStrategyBuilder_ == null) {
        if (strategyCase_ == 5) {
          return (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_;
        }
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.getDefaultInstance();
      } else {
        if (strategyCase_ == 5) {
          return trafficPercentStrategyBuilder_.getMessage();
        }
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public Builder setTrafficPercentStrategy(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy value) {
      if (trafficPercentStrategyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        strategy_ = value;
        onChanged();
      } else {
        trafficPercentStrategyBuilder_.setMessage(value);
      }
      strategyCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public Builder setTrafficPercentStrategy(
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.Builder builderForValue) {
      if (trafficPercentStrategyBuilder_ == null) {
        strategy_ = builderForValue.build();
        onChanged();
      } else {
        trafficPercentStrategyBuilder_.setMessage(builderForValue.build());
      }
      strategyCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public Builder mergeTrafficPercentStrategy(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy value) {
      if (trafficPercentStrategyBuilder_ == null) {
        if (strategyCase_ == 5 &&
            strategy_ != org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.getDefaultInstance()) {
          strategy_ = org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.newBuilder((org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_)
              .mergeFrom(value).buildPartial();
        } else {
          strategy_ = value;
        }
        onChanged();
      } else {
        if (strategyCase_ == 5) {
          trafficPercentStrategyBuilder_.mergeFrom(value);
        }
        trafficPercentStrategyBuilder_.setMessage(value);
      }
      strategyCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public Builder clearTrafficPercentStrategy() {
      if (trafficPercentStrategyBuilder_ == null) {
        if (strategyCase_ == 5) {
          strategyCase_ = 0;
          strategy_ = null;
          onChanged();
        }
      } else {
        if (strategyCase_ == 5) {
          strategyCase_ = 0;
          strategy_ = null;
        }
        trafficPercentStrategyBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.Builder getTrafficPercentStrategyBuilder() {
      return getTrafficPercentStrategyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategyOrBuilder getTrafficPercentStrategyOrBuilder() {
      if ((strategyCase_ == 5) && (trafficPercentStrategyBuilder_ != null)) {
        return trafficPercentStrategyBuilder_.getMessageOrBuilder();
      } else {
        if (strategyCase_ == 5) {
          return (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_;
        }
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Google Service Control selects service configurations based on
     * traffic percentage.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;</code>
     */
    private org.glowroot.agent.shaded.google.protobuf.SingleFieldBuilderV3<
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.Builder, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategyOrBuilder> 
        getTrafficPercentStrategyFieldBuilder() {
      if (trafficPercentStrategyBuilder_ == null) {
        if (!(strategyCase_ == 5)) {
          strategy_ = org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.getDefaultInstance();
        }
        trafficPercentStrategyBuilder_ = new org.glowroot.agent.shaded.google.protobuf.SingleFieldBuilderV3<
            org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.Builder, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategyOrBuilder>(
                (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy) strategy_,
                getParentForChildren(),
                isClean());
        strategy_ = null;
      }
      strategyCase_ = 5;
      onChanged();;
      return trafficPercentStrategyBuilder_;
    }

    private org.glowroot.agent.shaded.google.protobuf.SingleFieldBuilderV3<
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.Builder, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategyOrBuilder> deleteServiceStrategyBuilder_;
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy getDeleteServiceStrategy() {
      if (deleteServiceStrategyBuilder_ == null) {
        if (strategyCase_ == 200) {
          return (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_;
        }
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.getDefaultInstance();
      } else {
        if (strategyCase_ == 200) {
          return deleteServiceStrategyBuilder_.getMessage();
        }
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public Builder setDeleteServiceStrategy(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy value) {
      if (deleteServiceStrategyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        strategy_ = value;
        onChanged();
      } else {
        deleteServiceStrategyBuilder_.setMessage(value);
      }
      strategyCase_ = 200;
      return this;
    }
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public Builder setDeleteServiceStrategy(
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.Builder builderForValue) {
      if (deleteServiceStrategyBuilder_ == null) {
        strategy_ = builderForValue.build();
        onChanged();
      } else {
        deleteServiceStrategyBuilder_.setMessage(builderForValue.build());
      }
      strategyCase_ = 200;
      return this;
    }
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public Builder mergeDeleteServiceStrategy(org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy value) {
      if (deleteServiceStrategyBuilder_ == null) {
        if (strategyCase_ == 200 &&
            strategy_ != org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.getDefaultInstance()) {
          strategy_ = org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.newBuilder((org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_)
              .mergeFrom(value).buildPartial();
        } else {
          strategy_ = value;
        }
        onChanged();
      } else {
        if (strategyCase_ == 200) {
          deleteServiceStrategyBuilder_.mergeFrom(value);
        }
        deleteServiceStrategyBuilder_.setMessage(value);
      }
      strategyCase_ = 200;
      return this;
    }
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public Builder clearDeleteServiceStrategy() {
      if (deleteServiceStrategyBuilder_ == null) {
        if (strategyCase_ == 200) {
          strategyCase_ = 0;
          strategy_ = null;
          onChanged();
        }
      } else {
        if (strategyCase_ == 200) {
          strategyCase_ = 0;
          strategy_ = null;
        }
        deleteServiceStrategyBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.Builder getDeleteServiceStrategyBuilder() {
      return getDeleteServiceStrategyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategyOrBuilder getDeleteServiceStrategyOrBuilder() {
      if ((strategyCase_ == 200) && (deleteServiceStrategyBuilder_ != null)) {
        return deleteServiceStrategyBuilder_.getMessageOrBuilder();
      } else {
        if (strategyCase_ == 200) {
          return (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_;
        }
        return org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The strategy associated with a rollout to delete a `ManagedService`.
     * Readonly.
     * </pre>
     *
     * <code>.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;</code>
     */
    private org.glowroot.agent.shaded.google.protobuf.SingleFieldBuilderV3<
        org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.Builder, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategyOrBuilder> 
        getDeleteServiceStrategyFieldBuilder() {
      if (deleteServiceStrategyBuilder_ == null) {
        if (!(strategyCase_ == 200)) {
          strategy_ = org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.getDefaultInstance();
        }
        deleteServiceStrategyBuilder_ = new org.glowroot.agent.shaded.google.protobuf.SingleFieldBuilderV3<
            org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy.Builder, org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategyOrBuilder>(
                (org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy) strategy_,
                getParentForChildren(),
                isClean());
        strategy_ = null;
      }
      strategyCase_ = 200;
      onChanged();;
      return deleteServiceStrategyBuilder_;
    }

    private java.lang.Object serviceName_ = "";
    /**
     * <pre>
     * The name of the service associated with this Rollout.
     * </pre>
     *
     * <code>string service_name = 8;</code>
     */
    public java.lang.String getServiceName() {
      java.lang.Object ref = serviceName_;
      if (!(ref instanceof java.lang.String)) {
        org.glowroot.agent.shaded.google.protobuf.ByteString bs =
            (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the service associated with this Rollout.
     * </pre>
     *
     * <code>string service_name = 8;</code>
     */
    public org.glowroot.agent.shaded.google.protobuf.ByteString
        getServiceNameBytes() {
      java.lang.Object ref = serviceName_;
      if (ref instanceof String) {
        org.glowroot.agent.shaded.google.protobuf.ByteString b = 
            org.glowroot.agent.shaded.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceName_ = b;
        return b;
      } else {
        return (org.glowroot.agent.shaded.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the service associated with this Rollout.
     * </pre>
     *
     * <code>string service_name = 8;</code>
     */
    public Builder setServiceName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      serviceName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the service associated with this Rollout.
     * </pre>
     *
     * <code>string service_name = 8;</code>
     */
    public Builder clearServiceName() {
      
      serviceName_ = getDefaultInstance().getServiceName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the service associated with this Rollout.
     * </pre>
     *
     * <code>string service_name = 8;</code>
     */
    public Builder setServiceNameBytes(
        org.glowroot.agent.shaded.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      serviceName_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final org.glowroot.agent.shaded.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.api.servicemanagement.v1.Rollout)
  }

  // @@protoc_insertion_point(class_scope:google.api.servicemanagement.v1.Rollout)
  private static final org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout();
  }

  public static org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final org.glowroot.agent.shaded.google.protobuf.Parser<Rollout>
      PARSER = new org.glowroot.agent.shaded.google.protobuf.AbstractParser<Rollout>() {
    public Rollout parsePartialFrom(
        org.glowroot.agent.shaded.google.protobuf.CodedInputStream input,
        org.glowroot.agent.shaded.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.glowroot.agent.shaded.google.protobuf.InvalidProtocolBufferException {
        return new Rollout(input, extensionRegistry);
    }
  };

  public static org.glowroot.agent.shaded.google.protobuf.Parser<Rollout> parser() {
    return PARSER;
  }

  @java.lang.Override
  public org.glowroot.agent.shaded.google.protobuf.Parser<Rollout> getParserForType() {
    return PARSER;
  }

  public org.glowroot.agent.shaded.google.api.servicemanagement.v1.Rollout getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

